apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: apigw
data:
  nginx.conf: |
    user  nginx;
    worker_processes  auto;
    #variables_hash_max_size 2048;

    error_log  /var/log/nginx/error.log notice;
    pid        /var/run/nginx.pid;
    #load_module modules/ngx_http_app_protect_module.so;
    load_module modules/ngx_http_js_module.so;
    
    
    events {
    worker_connections  2048;
    }
    
    
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        variables_hash_max_size 2048;
    
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    
        log_format main_ext 'remote_addr="$remote_addr", '
                        'realip_remote_addr="$realip_remote_addr", '
                #'no_cors="$no_cors", '
                #'con="$con", '
                            '[time_local=$time_local], '
                            'request="$request", '
                            'status="$status", '
                            'http_referer="$http_referer", '
                            'http_origin="$http_origin", '
                            'body_bytes_sent="$body_bytes_sent", '
                            'Host="$host", '
                            'sn="$server_name", '
                            'request_time=$request_time, '
                            'http_user_agent="$http_user_agent", '
                            'http_x_forwarded_for="$http_x_forwarded_for", '
                            'request_length="$request_length", '
                            'upstream_address="$upstream_addr", '
                            'upstream_status="$upstream_status", '
                            'upstream_connect_time="$upstream_connect_time", '
                            'upstream_header_time="$upstream_header_time", '
                            'upstream_response_time="$upstream_response_time", '
                            'upstream_response_length="$upstream_response_length"';
    
        access_log  /var/log/nginx/access.log  main;
    
        sendfile        on;
        #tcp_nopush     on;
    
        keepalive_timeout  65;
    
        #gzip  on;
    
        include /etc/nginx/conf.d/*.conf;
        #include /etc/nginx/api_gateway.conf;
    

    }
  demo.f5selab.in-jwt.conf: |
    map $http_authorization $access_token {
            "~*^bearer (.*)$" $1;
            default $http_authorization;
    }
    keyval_zone zone=access_tokens_2:10m timeout=1m; # timeout defines how long to cache
    keyval $access_token $token_data zone=access_tokens_2;
    
    server {
           listen 443 ssl;
           server_name  demo.f5selab.in;
           status_zone demo;
           error_log /var/log/nginx/error-jwt.log debug;  # Reduce severity level as required
           #error_page 404 = @400;         # Treat invalid paths as bad requests
           proxy_intercept_errors on;     # Do not send backend errors to client
           #include api_json_errors.conf;  # API client-friendly JSON errors
           default_type application/json; # If no content-type, assume JSON
           # TLS config
           ssl_certificate      /etc/nginx/ssl/wild.f5selab.in.crt;
           ssl_certificate_key  /etc/nginx/ssl/wild.f5selab.in.key;
           ssl_session_cache    shared:SSL:10m;
           ssl_session_timeout  5m;
           ssl_ciphers          HIGH:!aNULL:!MD5;
           ssl_protocols        TLSv1.2 TLSv1.3;
    
           #resolver 10.1.20.90;                 # For DNS lookup of OAuth server
           subrequest_output_buffer_size 32k; # To fit a complete tokenset response
           gunzip on; # Decompress IdP responses if necessary
           set $jwt_cert_endpoint     "http://keycloak.f5selab.in:8080/realms/godigit/protocol/openid-connect/certs";
    
           location / {
    
              #auth_jwt "gidigit";
              #auth_jwt_key_cache   1h;
              #auth_jwt_key_request /_jwks_uri;
              #proxy_set_header username $jwt_claim_sub;
              proxy_set_header   Upgrade           $http_upgrade;
              proxy_set_header   Host              $host;
              proxy_set_header   X-Real-IP         $remote_addr;
              proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
              proxy_set_header   X-Forwarded-Proto $scheme;
              proxy_pass http://devcentral-svc.demo;
    
              access_log /var/log/nginx/access.log main_ext;
            }
          }
  default-443.conf: |
    
    server {
           listen 443 ssl;
           server_name _;
           # TLS config
           ssl_certificate      /etc/nginx/ssl/wild.f5selab.in.crt;
           ssl_certificate_key  /etc/nginx/ssl/wild.f5selab.in.key;
           ssl_session_cache    shared:SSL:10m;
           ssl_session_timeout  5m;
           ssl_ciphers          HIGH:!aNULL:!MD5;
           ssl_protocols        TLSv1.2 TLSv1.3;

           location / {
               return 404;
               }
           }
  default-80.conf: |
    
    server {
           listen 80;
           server_name demo.f5selab.in;

           location / {
    
              proxy_set_header   Upgrade           $http_upgrade;
              proxy_set_header   Host              $host;
              proxy_set_header   X-Real-IP         $remote_addr;
              proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
              proxy_set_header   X-Forwarded-Proto $scheme;
              proxy_pass http://devcentral-svc.demo;
               }
           }
  virtualhost.conf: |
    upstream app {
      server localhost:8090;
      keepalive 1024;
    }

    server {
      listen 80 default_server;
      root /usr/local/app;

      access_log /var/log/nginx/app.access_log main;
      error_log /var/log/nginx/app.error_log;

      location / {
        proxy_pass http://app/;
        proxy_http_version 1.1;
      }
    }
